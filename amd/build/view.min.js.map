{"version":3,"file":"view.min.js","sources":["../src/view.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * JS code for the view of the surveylinks block.\n *\n * @module     block_surveylinks/view\n * @copyright  2020 Andrew Madden <andrewmadden@catalyst-au.net>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Notification from 'core/notification';\nimport Templates from 'core/templates';\nimport {getSurveyLinks} from './explorance_api';\n\nconst SELECTORS = {\n    'BLOCK_SURVEYLINKS': \"[data-block='surveylinks']\",\n    'BLOCK_CONTENT_CONTAINER': '.block-content',\n};\n\n/**\n * Populate surveylinks data in surveylinks block.\n *\n * @param {Array} surveylinks Array of surveylink models.\n */\nasync function populateSurveyLinks(surveylinks) {\n    const surveylinkBlock = document.querySelector(SELECTORS.BLOCK_SURVEYLINKS);\n    const contentContainer = surveylinkBlock.querySelector(SELECTORS.BLOCK_CONTENT_CONTAINER);\n\n    // We are only expecting one surveylink object from an array.\n    if (!Array.isArray(surveylinks) || surveylinks.length !== 1) {\n        return;\n    }\n\n    try {\n        const args = {\"surveylink\": surveylinks.pop()};\n        contentContainer.innerHTML = await Templates.render('block_surveylinks/surveylink', args);\n        surveylinkBlock.classList.toggle('d-none', false);\n    } catch (exception) {\n        Notification.exception(exception);\n    }\n}\n\n/**\n * Initialize the JS for the block.\n *\n * @param {int} userid User id.\n * @param {int} courseid Course id.\n * @param {String} logosrc Src URL for logo.\n * @param {String} linktext Text to display in link.\n * @param {String} extratext Text to display under link.\n */\nasync function init(userid, courseid, logosrc, linktext, extratext) {\n\n    // Get data.\n    const promises = [\n        getSurveyLinks(userid, courseid),\n    ];\n\n    const [surveylinks] = await Promise.all(promises);\n\n    // Add display data to links.\n    surveylinks.map((link) => {\n        link.logosrc = logosrc;\n        link.linktext = linktext;\n        link.extratext = extratext;\n        return link;\n    });\n\n    // Populate page content.\n    populateSurveyLinks(surveylinks);\n}\n\nexport {init};\n"],"names":["userid","courseid","logosrc","linktext","extratext","promises","surveylinks","Promise","all","map","link","surveylinkBlock","document","querySelector","SELECTORS","contentContainer","Array","isArray","length","args","pop","innerHTML","Templates","render","classList","toggle","exception","populateSurveyLinks"],"mappings":";;;;;;;0FAgEoBA,OAAQC,SAAUC,QAASC,SAAUC,iBAG/CC,SAAW,EACb,kCAAeL,OAAQC,YAGpBK,mBAAqBC,QAAQC,IAAIH,UAGxCC,YAAYG,KAAKC,OACbA,KAAKR,QAAUA,QACfQ,KAAKP,SAAWA,SAChBO,KAAKN,UAAYA,UACVM,uBAzCoBJ,mBACzBK,gBAAkBC,SAASC,cAAcC,6BACzCC,iBAAmBJ,gBAAgBE,cAAcC,uCAGlDE,MAAMC,QAAQX,cAAuC,IAAvBA,YAAYY,wBAKrCC,KAAO,YAAeb,YAAYc,OACxCL,iBAAiBM,gBAAkBC,mBAAUC,OAAO,+BAAgCJ,MACpFR,gBAAgBa,UAAUC,OAAO,UAAU,GAC7C,MAAOC,iCACQA,UAAUA,YA+B3BC,CAAoBrB,sHAvDlBQ,4BACmB,6BADnBA,kCAEyB"}